#
# Location based automations
#
- alias: open gate for vehicle
  trigger:
    platform: state
    entity_id: device_tracker.beacon_bryce_truck, device_tracker.beacon_cindy_truck
    to: 'garage'
  condition:
    condition: state
    entity_id: binary_sensor.gate_closed_sensor
    state: 'on'
  action:
    - service: notify.notify
      data_template:
        message: 'TEST Opening Gate for {{ trigger.to_state.name }} (after {{ relative_time(trigger.from_state.last_changed) }})'
- alias: close gate for vehicle
  trigger:
    platform: state
    entity_id: device_tracker.beacon_bryce_truck, device_tracker.beacon_cindy_truck
    from: 'garage'
  condition:
    condition: state
    entity_id: binary_sensor.gate_closed_sensor
    state: 'off'
  action:
    - service: notify.notify
      data_template:
        message: 'TEST Closing Gate for {{ trigger.to_state.name }} (after {{ relative_time(trigger.from_state.last_changed) }})'
- alias: thermostat home mode
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'not_home'
    to: 'home'
  condition:
    condition: template
    value_template: "{{ is_state_attr('climate.downstairs', 'away_mode', 'on') or is_state_attr('climate.upstairs', 'away_mode', 'on') }}"
  action:
    - service: climate.set_away_mode
      data:
        away_mode: 'False'
    - service: notify.notify
      data_template:
        message: 'Thermostat away mode disabled.'

#
# Motion/Activity automations
#
- alias: mailbox motion
  trigger:
    platform: state
    entity_id: binary_sensor.mailbox_closed_sensor
    to: 'off'
  action:
    - service: notify.notify
      data_template:
        message: "You've got mail!"
    - service: logbook.log
      data_template:
        message: "You've got mail!"

#
# Lights/Switches on/off
#
- alias: garage motion on
  trigger:
    platform: state
    entity_id: binary_sensor.garage_motion_sensor
    to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: switch.garage_light
- alias: garage motion off
  trigger:
    platform: state
    entity_id: binary_sensor.garage_motion_sensor
    to: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: switch.garage_light
- alias: driveway lights on
  trigger:
    platform: state
    entity_id: binary_sensor.covers_closed
    to: 'off'
  condition:
    condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  action:
    service: homeassistant.turn_on
    entity_id: switch.driveway_light
- alias: driveway lights off
  trigger:
    platform: state
    entity_id: binary_sensor.covers_closed
    to: 'on'
  condition:
    condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  action:
    service: homeassistant.turn_off
    entity_id: switch.driveway_light
- alias: sunset lights on
  trigger:
    platform: sun
    event: sunset
    offset: '-00:30:00'
  action:
    service: homeassistant.turn_on
    entity_id: switch.front_porch_light, light.living_room_lamp
- alias: late night lights off
  trigger:
    platform: time
    after: '00:00:00'
  action:
    service: homeassistant.turn_off
    entity_id: light.living_room_lamp
- alias: sunrise lights off
  trigger:
    platform: sun
    event: sunrise
  action:
    service: homeassistant.turn_off
    entity_id: switch.front_porch_light

#
# Device Battery automations
#
- alias: device low battery
  trigger:
    platform: numeric_state
    entity_id: group.all_devices
    below: 25
  action:
    - service: notify.notify
      data_template:
        message: '{{ trigger.to_state.name }} is {{ trigger.to_state.state }}{{ trigger.to_state.attributes.unit_of_measurement }}.'
    - service: logbook.log
      data_template:
        name: '{{ trigger.to_state.name }}'
        entity_id: '{{ trigger.to_state.entity_id }}'
        message: ' is {{ trigger.to_state.state }}{{ trigger.to_state.attributes.unit_of_measurement }}.'

#
# Temperature automations
#
- alias: freezer temp alert
  trigger:
    platform: numeric_state
    entity_id: sensor.deep_freezer_temp, sensor.freezer_temp
    above: 20
  action:
    - service: notify.notify
      data_template:
        message: '{{ trigger.to_state.name }} is {{ trigger.to_state.state }}{{ trigger.to_state.attributes.unit_of_measurement }}.'
    - service: logbook.log
      data_template:
        name: '{{ trigger.to_state.name }}'
        entity_id: '{{ trigger.to_state.entity_id }}'
        message: ' is {{ trigger.to_state.state }}{{ trigger.to_state.attributes.unit_of_measurement }}.'
- alias: fridge temp alert
  trigger:
    platform: numeric_state
    entity_id: sensor.drink_fridge_temp
    above: 50
  action:
    - service: notify.notify
      data_template:
        message: '{{ trigger.to_state.name }} is {{ trigger.to_state.state }}{{ trigger.to_state.attributes.unit_of_measurement }}.'
    - service: logbook.log
      data_template:
        name: '{{ trigger.to_state.name }}'
        entity_id: '{{ trigger.to_state.entity_id }}'
        message: ' is {{ trigger.to_state.state }}{{ trigger.to_state.attributes.unit_of_measurement }}.'

